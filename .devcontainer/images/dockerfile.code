###############################################################################
#
# Build step: base
#
###############################################################################

# Use an official Node.js runtime as a parent image
FROM ghpage-test:base-debian as base

# Install curl, unzip, zsh, and git (required for nvm and oh-my-zsh installation)
RUN apt-get install -y gh vim


###############################################################################
#
# Build step: docker
#
###############################################################################

FROM base as docker

# Install dependencies for Docker installation, add Dockerâ€™s official GPG key, and add the repository to Apt sources
RUN apt-get update && \
  apt-get install -y \
  ca-certificates \
  gnupg \
  lsb-release && \
  mkdir -p /etc/apt/keyrings && \
  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker Engine, Docker CLI, containerd, and Docker Compose plugin
RUN apt-get update && \
  apt-get install -y \
  docker-ce \
  docker-ce-cli \
  containerd.io \
  docker-buildx-plugin \
  docker-compose-plugin && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*


###############################################################################
#
# Build step: final
#
###############################################################################

FROM docker as final

WORKDIR /repo

ENTRYPOINT pnpm install && /bin/sh -c "while sleep 1000; do :; done"
